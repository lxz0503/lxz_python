# webdriver的API与定位元素 #
# firefox #
## 打开http://www.baidu.com ##
## 右键点击 新闻，然后 点击 查看元素，然后在下面的高亮蓝色行，右键 复制， css选择器，拷贝下这串字母 ##
## 上面的操作就是 find_element_by_css_selector ##
# 使用CSS来定位可以使用input 后面选择id,class,type,value任一个元素即可 #
## find_element_by_css_selector('input[id=\'ww\']') ##
##  find_element_by_css_selector('input[type=\'button\']') ##
# 如果是图片可以使用find_element_by_css_selector('img[alt=\'button\']')

#  使用xpath定位元素 #
# 文本定位，一般对应着元素a，find_element_by_xpath('//a[text()="新闻"]') #
# 单引号里面可以包含双引号 #
# 斜杠 / slash #
# 反斜杠 \ backslash #
# 下划线  _ underline #
# 冒号 ： colon  ['kəʊlən] #
# 分号 ;  semicolon #
# 一对单引号 a pair of single quotes, 一对双引号a pair of double quotes #
# 括号,小括号 bracket（）, square bracket 中括号【】，a pair of curly braces 花括号 {} #
# indent--动词 缩进, indentation should be four white spaces #
# 打开本地html文件路径格式 file:///D:/Pycharm/test_xiaozhan/test.html #
# 通过命令行来执行某个case,进入到脚本所在目录，  python -m unittest web_driver_api.WebTest.test_visitURL #
# 鼠标事件 #
# context_click----鼠标右击事件 #
# double_click 鼠标双击事件 #
# drag_and_drop 拖动鼠标 #
# move_to_element（ele).perform() 鼠标悬停在某个元素上#
# click_and_hold 按下鼠标左键在一个元素上 #
# 键盘事件 send_keys() #
# from selenium.webdriver.common.keys import Keys #
# send_keys(Keys.BACK_SPACE) 退格键 #
# send_keys(Keys.CONTROL, 'a') --全选拷贝 #
# send_keys(Keys.CONTROL, 'x')---剪切 #
# send_keys(Keys.CONTROL, 'v') ---粘贴 #

# 对话框处理与登录，自己写登录邮箱的代码 #
# 多窗口切换，打开百度首页，搜索麦子学院，跳转到麦子许愿首页，也就是窗口句柄切换 #
# d.window_handles 返回的是一个列表 #
# d.switch_to_window(d.window_handles[1])#

# 脚本等待方法 #
# time.sleep(5),  driver.implicitly_wait(5), #
# from selenium.webdriver.support.ui import WebDriverWait #

# class WebDriverWait(builtins.object)
 |  Methods defined here:
 |  
 |  __init__(self, driver, timeout, poll_frequency=0.5, ignored_exceptions=None)#
# WebDriverWait: poll_frequency->check->until->method return not false #
# until not--return value is False #

# 处理alert对护框 #
# switch_to_alert(),切到alert.#
# accept,dismiss--消失, send_keys()--有输入框才能使用，否则报错 #

# 模块化设计用例： openBrowser, loadUrl, findElement, sendVals, checkResults #

